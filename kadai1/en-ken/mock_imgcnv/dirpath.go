// Code generated by MockGen. DO NOT EDIT.
// Source: ./imgcnv/dirpath.go

// Package mock_imgcnv is a generated GoMock package.
package mock_imgcnv

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDirPath is a mock of DirPath interface
type MockDirPath struct {
	ctrl     *gomock.Controller
	recorder *MockDirPathMockRecorder
}

// MockDirPathMockRecorder is the mock recorder for MockDirPath
type MockDirPathMockRecorder struct {
	mock *MockDirPath
}

// NewMockDirPath creates a new mock instance
func NewMockDirPath(ctrl *gomock.Controller) *MockDirPath {
	mock := &MockDirPath{ctrl: ctrl}
	mock.recorder = &MockDirPathMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDirPath) EXPECT() *MockDirPathMockRecorder {
	return m.recorder
}

// AllFilePaths mocks base method
func (m *MockDirPath) AllFilePaths(path, ext string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllFilePaths", path, ext)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllFilePaths indicates an expected call of AllFilePaths
func (mr *MockDirPathMockRecorder) AllFilePaths(path, ext interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllFilePaths", reflect.TypeOf((*MockDirPath)(nil).AllFilePaths), path, ext)
}
